<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://shareclash.github.io/news/article-21570.htm" />
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>如何加快循环操作和Numpy数组运算速度！</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
        <meta name="description" content="前言 Python 虽然写起来代码量要远少于如 C++,Java，但运行速度又不如它们，因此也有了各种提升 Python 速度的方法技巧，这次要介绍的是用 Numba 库进行加速比较耗时的循环操作以及" />
    
    <!-- Favicon -->
    <link href="/assets/website/img/shareclash/favicon.ico" rel="icon">

    <meta name="author" content="ShareClash官网订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://shareclash.github.io/news/article-21570.htm" />
    <meta property="og:site_name" content="ShareClash官网订阅站" />
    <meta property="og:title" content="如何加快循环操作和Numpy数组运算速度！" />
    <meta property="og:image" content="https://shareclash.github.io/uploads/20240527/44e931a05cbabb08a6c864609232ea04.webp" />
        <meta property="og:release_date" content="2024-12-05T10:04:01" />
    <meta property="og:updated_time" content="2024-12-05T10:04:01" />
        <meta property="og:description" content="前言 Python 虽然写起来代码量要远少于如 C++,Java，但运行速度又不如它们，因此也有了各种提升 Python 速度的方法技巧，这次要介绍的是用 Numba 库进行加速比较耗时的循环操作以及" />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="如何加快循环操作和Numpy数组运算速度！">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
        
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Raleway:300,300i,400,400i,500,500i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i" rel="stylesheet">
    <!-- Vendor CSS Files -->
    <link href="/assets/website/js/frontend/shareclash/aos/aos.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/shareclash/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/shareclash/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/shareclash/boxicons/css/boxicons.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/shareclash/glightbox/css/glightbox.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/shareclash/swiper/swiper-bundle.min.css" rel="stylesheet">
    <!-- Template Main CSS File -->
    <link href="/assets/website/css/shareclash/style.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-Z0SYCQN5K6"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-Z0SYCQN5K6');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- ======= Header ======= -->
    <header id="header" class="fixed-top d-flex align-items-center">
        <div class="container d-flex align-items-center">
            <div class="logo me-auto">
                <a href="/">
                                <span>ShareClash</span>
                                </a>
            </div>
            <nav id="navbar" class="navbar order-last order-lg-0">
                <ul>
                                        <li><a class="nav-link" href="/">首页</a></li>
                                        <li><a class="nav-link" href="/free-nodes/">免费节点</a></li>
                                        <li><a class="nav-link" href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a class="nav-link" href="/client.htm">客户端</a></li>
                                        <li><a class="nav-link" href="/news/">新闻资讯</a></li>
                                    </ul>
                <i class="bi bi-list mobile-nav-toggle"></i>
            </nav><!-- .navbar -->
            <div class="header-social-links d-flex align-items-center">
                <a href="#" class="twitter"><i class="bi bi-twitter"></i></a>
                <a href="#" class="facebook"><i class="bi bi-facebook"></i></a>
                <a href="#" class="instagram"><i class="bi bi-instagram"></i></a>
                <a href="#" class="linkedin"><i class="bi bi-linkedin"></i></i></a>
            </div>
        </div>
    </header><!-- End Header -->
    <main id="main">
        <!-- ======= Breadcrumbs ======= -->
        <section id="breadcrumbs" class="breadcrumbs">
            <div class="container">
                <ol>
                    <li><a href="/">首页</a></li>
                    <li><a href="/news/">新闻资讯</a></li>
                    <li>正文</li>
                </ol>
                <h1>新闻资讯</h1>
            </div>
        </section><!-- End Breadcrumbs -->
        <section class="inner-page">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="htmledit_views"> <h3>前言</h3> <p>Python 虽然写起来代码量要远少于如 C++,Java，但运行速度又不如它们，因此也有了各种提升 Python 速度的方法技巧，这次要介绍的是用 Numba 库进行加速比较耗时的循环操作以及 Numpy 操作。</p> <p>在24式加速你的Python中介绍对循环的加速方法中，一个办法就是采用&nbsp; <code>Numba</code> 加速，刚好最近看到一篇文章介绍了利用&nbsp; <code>Numba</code> 加速 Python ，文章主要介绍了两个例子，也是&nbsp; <code>Numba</code> 的两大作用，分别是加速循环，以及对&nbsp; <code>Numpy</code> 的计算加速。</p> <p>原文：https://towardsdatascience.com/heres-how-you-can-get-some-free-speed-on-your-python-code-with-numba-89fdc8249ef3</p> <p>相比其他语言，Python 确实在运行速度上是比较慢的。</p> <p>一种常用解决方法，就是用如 C++ 改写代码，然后用 Python 进行封装，这样既可以实现 C++ 的运行速度又可以保持在主要应用中采用 Python 的方便。</p> <p>这种办法的唯一难点就是改写为 C++ 部分的代码需要耗费不少时间，特别是如果你对 C++ 并不熟悉的情况。</p> <p><code>Numba</code> 可以实现提升速度但又不需要改写部分代码为其他编程语言。</p> <p>Numba 简介</p> <p><code>Numba</code> 是一个可以将 Python 代码转换为优化过的机器代码的编译库。通过这种转换，对于数值算法的运行速度可以提升到接近&nbsp; <code>C</code> 语言代码的速度。</p> <p>采用 <code>Numba</code> 并不需要添加非常复杂的代码，只需要在想优化的函数前 添加一行代码，剩余的交给&nbsp; <code>Numba</code> 即可。</p> <p><code>Numba</code> 可以通过&nbsp; <code>pip</code> 安装：</p> <pre>$ pip install numba </pre> <p><code>Numba</code> 对于有许多数值运算的， <code>Numpy</code> 操作或者大量循环操作的情况，都可以大大提升运行速度。</p> <p>加速 Python 循环</p> <p><code>Numba</code> 的最基础应用就是加速 Python 中的循环操作。</p> <p>首先，如果你想使用循环操作，你先考虑是否可以采用 <code>Numpy</code> 中的函数替代，有些情况，可能没有可以替代的函数。这时候就可以考虑采用&nbsp; <code>Numba</code> 了。</p> <p>第一个例子是通过插入排序算法来进行说明。我们会实现一个函数，输入一个无序的列表，然后返回排序好的列表。</p> <p>我们先生成一个包含 100,000 个随机整数的列表，然后执行 50 次插入排序算法，然后计算平均速度。</p> <p>代码如下所示：</p> <pre>import time import random  num_loops = 50 len_of_list = 100000  def insertion_sort(arr):     for i in range(len(arr)):         cursor = arr[i]         pos = i          while pos &gt; 0 and arr[pos-1] &gt; cursor:             # 从后往前对比，从小到大排序             arr[pos] = arr[pos-1]             pos = pos-1         # 找到当前元素的位置         arr[pos] = cursor     return arr start = time.time() list_of_numbers = list() for i in range(len_of_list):     num = random.randint(0, len_of_list)     list_of_numbers.append(num)  for i in range(num_loops):     result = insertion_sort(list_of_numbers)  end = time.time()  run_time = end-start print('Average time={}'.format(run_time/num_loops)) </pre> <p>输出结果：</p> <pre>Average time=22.84399790763855 </pre> <p>从代码可以知道插入排序算法的时间复杂度是 <img decoding="async" alt="" class="has" src="0"/> ，因为这里包含了两个循环， <code>for</code> 循环里面带有&nbsp; <code>while</code> 循环，这是最差的情况。然后输入数量是 10 万个整数，再加上重复 50 次，这是非常耗时的操作了。</p> <p>原作者采用的是电脑配置是 i7-8700k，所以其平均耗时是 <code>3.0104s</code> 。但这里我的电脑配置就差多了，i5-4210M 的笔记本电脑，并且已经使用了接近 4 年，所以我跑的结果是，平均耗时为&nbsp; <code>22.84s</code> 。</p> <p>那么，如何采用 <code>Numba</code> 加速循环操作呢，代码如下所示：</p> <pre>import time import random from numba import jit  num_loops = 50 len_of_list = 100000  @jit(nopython=True) def insertion_sort(arr):     for i in range(len(arr)):         cursor = arr[i]         pos = i          while pos &gt; 0 and arr[pos-1] &gt; cursor:             # 从后往前对比，从小到大排序             arr[pos] = arr[pos-1]             pos = pos-1         # 找到当前元素的位置         arr[pos] = cursor     return arr start = time.time() list_of_numbers = list() for i in range(len_of_list):     num = random.randint(0, len_of_list)     list_of_numbers.append(num)  for i in range(num_loops):     result = insertion_sort(list_of_numbers)  end = time.time()  run_time = end-start print('Average time={}'.format(run_time/num_loops)) </pre> <p>输出结果：</p> <pre>Average time=0.09438572406768798 </pre> <p>可以看到，其实只增加了两行代码，第一行就是导入 <code>jit</code> 装饰器</p> <pre>from numba import jit </pre> <p>接着在函数前面增加一行代码，采用装饰器</p> <pre>@jit(nopython=True) def insertion_sort(arr): </pre> <p>使用 <code>jit</code> 装饰器表明我们希望将该函数转换为机器代码，然后参数&nbsp; <code>nopython</code> 指定我们希望&nbsp; <code>Numba</code> 采用纯机器代码，或者有必要的情况加入部分&nbsp; <code>Python</code> 代码，这个参数必须设置为&nbsp; <code>True</code> 来得到更好的性能，除非出现错误。</p> <p>原作者得到的平均耗时是 <code>0,1424s</code> ，而我的电脑上则是提升到仅需&nbsp; <code>0.094s</code> ，速度都得到非常大的提升。</p> <p>加速 Numpy 操作</p> <p><code>Numba</code> 的另一个常用地方，就是加速&nbsp; <code>Numpy</code> 的运算。</p> <p>这次将初始化 3 个非常大的 <code>Numpy</code> 数组，相当于一个图片的尺寸大小，然后采用&nbsp; <code>numpy.square()</code> 函数对它们的和求平方。</p> <p>代码如下所示：</p> <pre>import time import numpy as np  num_loops = 50 img1 = np.ones((1000, 1000), np.int64) * 5 img2 = np.ones((1000, 1000), np.int64) * 10 img3 = np.ones((1000, 1000), np.int64) * 15  def add_arrays(img1, img2, img3):     return np.square(img1+img2+img3)  start1 = time.time() for i in range(num_loops):     result = add_arrays(img1, img2, img3) end1 = time.time() run_time1 = end1 - start1 print('Average time for normal numpy operation={}'.format(run_time1/num_loops)) </pre> <p>输出结果：</p> <pre>Average time for normal numpy operation=0.040156774520874024 </pre> <p>当我们对 <code>Numpy</code> 数组进行基本的数组计算，比如加法、乘法和平方， <code>Numpy</code> 都会自动在内部向量化，这也是它可以比原生&nbsp; <code>Python</code> 代码有更好性能的原因。</p> <p>上述代码在原作者的电脑运行的速度是 <code>0.002288s</code> ，而我的电脑需要&nbsp; <code>0.04s</code> 左右。</p> <p>但即便是 <code>Numpy</code> 代码也不会和优化过的机器代码速度一样快，因此这里依然可以采用&nbsp; <code>Numba</code> 进行加速，代码如下所示：</p> <pre># numba 加速 from numba import vectorize, int64  @vectorize([int64(int64,int64,int64)], target='parallel') def add_arrays_numba(img1, img2, img3):     return np.square(img1+img2+img3)  start2 = time.time() for i in range(num_loops):     result = add_arrays_numba(img1, img2, img3) end2 = time.time() run_time2 = end2 - start2 print('Average time using numba accelerating={}'.format(run_time2/num_loops)) </pre> <p>输出结果：</p> <pre>Average time using numba accelerating=0.007735490798950195 </pre> <p>这里采用的是 <code>vectorize</code> 装饰器，它有两个数参数，第一个参数是指定需要进行操作的&nbsp; <code>numpy</code> 数组的数据类型，这是必须添加的，因为&nbsp; <code>numba</code> 需要将代码转换为最佳版本的机器代码，以便提升速度；</p> <p>第二个参数是 <code>target</code> ，它有以下三个可选数值，表示如何运行函数：</p> <ul> <li> <p>cpu：运行在单线程的 CPU 上</p> </li> <li> <p>parallel：运行在多核、多线程的 CPU</p> </li> <li> <p>cuda：运行在 GPU 上</p> </li> </ul> <p><code>parallel</code> 选项在大部分情况是快过&nbsp; <code>cpu</code> ，而&nbsp; <code>cuda</code> 一般用于有非常大数组的情况。</p> <p>上述代码在原作者的电脑运行时间是 <code>0.001196s</code> ，提升了 2 倍左右，而我的电脑是&nbsp; <code>0.0077s</code> ，提升了 5 倍左右速度。</p> <p>小结</p> <p><code>numba</code> 在以下情况下可以更好发挥它提升速度的作用：</p> <ul> <li> <p><code>Python</code> 代码运行速度慢于&nbsp; <code>C</code> 代码的地方，典型的就是循环操作</p> </li> <li> <p>在同个地方重复使用同个操作的情况，比如对许多元素进行同个操作，即 <code>numpy</code> 数组的操作</p> </li> </ul> <p>而在其他情况下， <code>Numba</code> 并不会带来如此明显的速度提升，当然，一般情况下尝试采用&nbsp; <code>numba</code> 提升速度也是一个不错的尝试。</p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-21120.htm">附近宠物领养 附近宠物领养中心在哪</a></p>
                                        <p>下一个：<a href="/news/article-21573.htm">动物疫苗生产厂家排名榜前十名图片（动物疫苗品牌）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-32302.htm" title="宠物疫苗常温下可以保存多久（宠物疫苗常温下可以保存多久呢）">宠物疫苗常温下可以保存多久（宠物疫苗常温下可以保存多久呢）</a></li>
                        <li class="py-2"><a href="/news/article-26662.htm" title="c语言查看文件详细信息">c语言查看文件详细信息</a></li>
                        <li class="py-2"><a href="/news/article-24542.htm" title="k8s &#8211; 使用helm安装mysql">k8s &#8211; 使用helm安装mysql</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-10-clash-node-daily-updates.htm" title="1月10日 | 最新V2ray/SSR/Clash/Shadowrocket高速免费节点，最高速度20.2M/S 免费Clash机场订阅地址">1月10日 | 最新V2ray/SSR/Clash/Shadowrocket高速免费节点，最高速度20.2M/S 免费Clash机场订阅地址</a></li>
                        <li class="py-2"><a href="/news/article-63398.htm" title="附近免费领狗狗在哪里（附近有没有免费的狗狗领）">附近免费领狗狗在哪里（附近有没有免费的狗狗领）</a></li>
                        <li class="py-2"><a href="/news/article-20658.htm" title="宠物粮品牌名称大全及图片（宠物粮食排行榜）">宠物粮品牌名称大全及图片（宠物粮食排行榜）</a></li>
                        <li class="py-2"><a href="/news/article-21117.htm" title="怎么看幼猫性格好坏（怎么消除小猫刚到家的恐惧感）">怎么看幼猫性格好坏（怎么消除小猫刚到家的恐惧感）</a></li>
                        <li class="py-2"><a href="/news/article-29717.htm" title="宠物猫打疫苗一共多少钱一针（宠物猫打疫苗要多少钱）">宠物猫打疫苗一共多少钱一针（宠物猫打疫苗要多少钱）</a></li>
                        <li class="py-2"><a href="/news/article-35458.htm" title="郑州市动物防疫站电话查询（郑州市动物防疫站电话查询是多少）">郑州市动物防疫站电话查询（郑州市动物防疫站电话查询是多少）</a></li>
                        <li class="py-2"><a href="/news/article-39078.htm" title="Spring Framework源码解析-BeanPostProcessor讲解">Spring Framework源码解析-BeanPostProcessor讲解</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">6</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">87</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            </div>
        </section>
    </main><!-- End #main -->
        <!-- ======= Footer ======= -->
    <footer id="footer">
        <div class="container">
            <div class="copyright">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                ShareClash官网订阅站 版权所有
                <br />
                Powered by WordPress
            </div>
        </div>
    </footer><!-- End Footer -->
    <a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>
    <!-- Vendor JS Files -->
    <script src="/assets/website/js/frontend/shareclash/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/shareclash/aos/aos.js"></script>
    <script src="/assets/website/js/frontend/shareclash/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/shareclash/isotope-layout/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/shareclash/php-email-form/validate.js"></script>
    <script src="/assets/website/js/frontend/shareclash/swiper/swiper-bundle.min.js"></script>
    <!-- Template Main JS File -->
    <script src="/assets/website/js/frontend/shareclash/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>